Assignment No. 3

Create a database named college 
	mysql> create database college;
	Query OK, 1 row affected (0.03 sec)
	
Create a table name student in college database with following structure roll,name,class,marks,age with respective datatypes. 
	mysql> use college
	Database changed
	mysql> create table student(roll int, name varchar(15), class varchar(5), marks float, age int);
	Query OK, 0 rows affected (0.09 sec)

Apply the following MySQL clause to this table. 
Creating, Altering, Dropping Constraints 
	Creating primary key constraint, not null constraint:
	mysql> alter table student add constraint pkstd primary key(roll);
	Query OK, 0 rows affected (0.19 sec)
	Records: 0  Duplicates: 0  Warnings: 0
	mysql> alter table student modify age int not null;
	Query OK, 0 rows affected (0.23 sec)
	Records: 0  Duplicates: 0  Warnings: 0
	
	modify not null constraint
	mysql> alter table student modify age int null;
	Query OK, 0 rows affected (0.20 sec)
	Records: 0  Duplicates: 0  Warnings: 0
	
	altering default constraint
	mysql> alter table student alter marks set default 0;
	Query OK, 0 rows affected (0.03 sec)
	Records: 0  Duplicates: 0  Warnings: 0

	dropping constraint:
	mysql> alter table student alter marks drop default;
	Query OK, 0 rows affected (0.03 sec)
	Records: 0  Duplicates: 0  Warnings: 0
	
	mysql> alter table student drop primary key;
	Query OK, 5 rows affected (0.22 sec)
	Records: 5  Duplicates: 0  Warnings: 0
	
Aggregate Functions: SUM(), AVG(), COUNT(), MAX(), MIN(), COUNT(), 
	mysql> select SUM(marks) as Sum, AVG(marks) as Average, COUNT(roll) as Total, MAX(marks) as Maximum, MIN(marks) as Minimum from student;
	+--------------------+------------------+-------+---------+---------+
	| Sum                | Average          | Total | Maximum | Minimum |
	+--------------------+------------------+-------+---------+---------+
	| 364.86998748779297 | 72.9739974975586 |     5 |   89.77 |   65.39 |
	+--------------------+------------------+-------+---------+---------+
	1 row in set (0.00 sec)


Group By
	mysql> select class, MAX(marks), MIN(marks), COUNT(marks) from student group by class;
	+-------+------------+------------+--------------+
	| class | MAX(marks) | MIN(marks) | COUNT(marks) |
	+-------+------------+------------+--------------+
	| FY    |      89.77 |      67.84 |            2 |
	| SY    |      76.45 |      65.42 |            2 |
	| TY    |      65.39 |      65.39 |            1 |
	+-------+------------+------------+--------------+
	3 rows in set (0.00 sec)

Having Clause Using Like
	mysql> select class, MAX(marks), MIN(marks), COUNT(marks) from student group by class having class like "%Y";
	+-------+------------+------------+--------------+
	| class | MAX(marks) | MIN(marks) | COUNT(marks) |
	+-------+------------+------------+--------------+
	| FY    |      89.77 |      67.84 |            2 |
	| SY    |      76.45 |      65.42 |            2 |
	| TY    |      65.39 |      65.39 |            1 |
	+-------+------------+------------+--------------+
	3 rows in set (0.00 sec)
	
	mysql> select class, MAX(marks), MIN(marks), COUNT(marks) from student group by class having class like "F%";
	+-------+------------+------------+--------------+
	| class | MAX(marks) | MIN(marks) | COUNT(marks) |
	+-------+------------+------------+--------------+
	| FY    |      89.77 |      67.84 |            2 |
	+-------+------------+------------+--------------+
	1 row in set (0.00 sec)

Distinct
	mysql> select distinct(age) from student;
	+------+
	| age  |
	+------+
	|   20 |
	|   21 |
	|   22 |
	+------+
	3 rows in set (0.00 sec)

Order By
  Ascending Order:
	mysql> select roll, name, class, marks from student order by class;
	+------+-------+-------+-------+
	| roll | name  | class | marks |
	+------+-------+-------+-------+
	|    1 | Kavya | FY    | 89.77 |
	|    3 | Rahul | FY    | 67.84 |
	|    2 | Jeel  | SY    | 76.45 |
	|    5 | Mohan | SY    | 65.42 |
	|    4 | Avani | TY    | 65.39 |
	+------+-------+-------+-------+
	5 rows in set (0.00 sec)
  Descending Order:
	mysql> select roll, name, class, marks from student order by class desc;
	+------+-------+-------+-------+
	| roll | name  | class | marks |
	+------+-------+-------+-------+
	|    4 | Avani | TY    | 65.39 |
	|    2 | Jeel  | SY    | 76.45 |
	|    5 | Mohan | SY    | 65.42 |
	|    1 | Kavya | FY    | 89.77 |
	|    3 | Rahul | FY    | 67.84 |
	+------+-------+-------+-------+
	5 rows in set (0.00 sec)


Between...
	mysql> select roll, name, marks, class from student where age BETWEEN 21 and 23;
	+------+-------+-------+-------+
	| roll | name  | marks | class |
	+------+-------+-------+-------+
	|    2 | Jeel  | 76.45 | SY    |
	|    4 | Avani | 65.39 | TY    |
	|    5 | Mohan | 65.42 | SY    |
	+------+-------+-------+-------+
	3 rows in set (0.00 sec)
	
	mysql> select roll, name, marks, class from student where name BETWEEN "Jeel" and "Mohan";
	+------+-------+-------+-------+
	| roll | name  | marks | class |
	+------+-------+-------+-------+
	|    1 | Kavya | 89.77 | FY    |
	|    2 | Jeel  | 76.45 | SY    |
	|    5 | Mohan | 65.42 | SY    |
	+------+-------+-------+-------+
	3 rows in set (0.00 sec)
	
	mysql> select roll, name, marks, class from student where class BETWEEN 'SY' and 'TY';
	+------+-------+-------+-------+
	| roll | name  | marks | class |
	+------+-------+-------+-------+
	|    2 | Jeel  | 76.45 | SY    |
	|    4 | Avani | 65.39 | TY    |
	|    5 | Mohan | 65.42 | SY    |
	+------+-------+-------+-------+
	3 rows in set (0.00 sec)

And Comparing Nulls, 
	mysql> select roll, name, marks from student where marks is null;
	Empty set (0.00 sec)
	
	mysql> select roll, name, marks from student where marks is not null;
	+------+-------+-------+
	| roll | name  | marks |
	+------+-------+-------+
	|    1 | Kavya | 89.77 |
	|    2 | Jeel  | 76.45 |
	|    3 | Rahul | 67.84 |
	|    4 | Avani | 65.39 |
	|    5 | Mohan | 65.42 |
	+------+-------+-------+
	5 rows in set (0.00 sec)
	
Using IN/Not-In
	mysql> select roll, name, marks, class from student where class IN('FY', 'SY');
	+------+-------+-------+-------+
	| roll | name  | marks | class |
	+------+-------+-------+-------+
	|    1 | Kavya | 89.77 | FY    |
	|    2 | Jeel  | 76.45 | SY    |
	|    3 | Rahul | 67.84 | FY    |
	|    5 | Mohan | 65.42 | SY    |
	+------+-------+-------+-------+
	4 rows in set (0.00 sec)
	
	mysql> select roll, name, marks, class from student where age IN(20, 22);
	+------+-------+-------+-------+
	| roll | name  | marks | class |
	+------+-------+-------+-------+
	|    1 | Kavya | 89.77 | FY    |
	|    3 | Rahul | 67.84 | FY    |
	|    4 | Avani | 65.39 | TY    |
	+------+-------+-------+-------+
	3 rows in set (0.00 sec)
	
	mysql> select roll, name, marks,class from student where class IN('FY', 'SY') and age > 20;
	+------+-------+-------+-------+
	| roll | name  | marks | class |
	+------+-------+-------+-------+
	|    2 | Jeel  | 76.45 | SY    |
	|    5 | Mohan | 65.42 | SY    |
	+------+-------+-------+-------+
	2 rows in set (0.00 sec)
	
	mysql> select roll, name, marks, class from student where class NOT IN('FY', 'SY');
	+------+-------+-------+-------+
	| roll | name  | marks | class |
	+------+-------+-------+-------+
	|    4 | Avani | 65.39 | TY    |
	+------+-------+-------+-------+
	1 row in set (0.00 sec)
	
